//
//  TASKS.swift
//  Lesson 2 HW
//
//  Created by Viktor Prikolota on 18.08.2022.
//

/*
 TASK 1:
 При установке длительности таймера мы видим, что duration успешно приходит в TimerViewController и в методе func set(duration: Int) выводится в консоль, но не устанавливается в estimationLabel. Используя методы жизненного цикла вью контроллера сделайте так, чтобы при возвращении из SettingsViewController значение duration было yстановлено в topLabel.


 TASK 2:
 Зная что пользователь может запустить таймер на большой срок, нам нужно обеспечить его работу даже в случае закрытия и повторного входа в приложение. Используя методы жизненного цикла приложения и его нотификацию обеспечьте работу таймера даже при закрытии приложения. Для этого я создал вспомогательный класс TimerTools с рядом методов.

 
 TASK 3*:
 Проведите работу над кодом используя знания по наследования создайте класс BaseViewController в котором соберите весь повторяющийся код Timer и SettingsViewController’ов.


 TASK 4:
 Создайте класс Logger, который имеет один метод log(event: ...) и он печатает в консоль этапы жизненного цикла приложения с указанием точного времени, когда приложение было в том или ином состоянии. Пример: '2022-08-18 17:15:44 +0000 - Application did enter background'.

 */
